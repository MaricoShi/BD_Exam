@{
    ViewBag.Title = "人员档案室";
    Layout = null;
    string _ActionName = ViewBag.ActionName ?? "PerSonDetail";
}

<style type="text/css">
    #btPersonQuerySearch {word-spacing: 5px;}
    .modal-PersonAdd table.table td{line-height:30px;padding:0;}
    .modal-PersonAdd table.table td.text-left {line-height:20px;}
    .modal-PersonAdd table.table input,
    .modal-PersonAdd table.table select,
    .modal-PersonAdd table.table textarea {
        margin: 0;
        padding: 0;
        width:100%;
        height:100%;
        border:none;
    }
</style>

<div>
    <div class="search_box_bar">
        <div class="row">
            <div class="col-sm-6"><span>机构：</span><input type="text" disabled="disabled" />
                <a class="btn btn-info" id="btnOrgSel"
                   href="@(Url.Content("~/BaseManager/OrgDatas"))"
                   data-ajax-id="OrgDatas"
                   data-ajax-update="#modal-OrgData-Content"
                   data-ajax="true"
                   data-modal-for=".modal-OrgData">选择</a>
            </div>
            <div class="col-sm-6"><span>包含子集单位信息：</span><span id="ChildrenOrg"></span></div>
        </div>
        <div class="row">
            <div class="col-sm-6"><span>人员工号：</span><input type="text" placeholder="可输入人员工号进行筛选" /></div>
            <div class="col-sm-6"><span>人员姓名：</span><input type="text" placeholder="可输入人员姓名进行筛选" /></div>
        </div>
        <div class="row">
            <button class="btn btn-info pull-right" id="btPersonQuerySearch"><i class="fa fa-search"></i> 搜索</button>
        </div>
    </div>

    <div class="row mg_tb_10 mg_lr_0">
        <a class="btn btn-info" id="btPersonAdd"
           href="@(Url.Content("~/BaseManager/PerSonDetail"))"
           data-ajax-id="PerSonDetail"
           data-ajax-update="#modal-PersonAdd-Content"
           data-ajax="true"
           data-modal-for=".modal-PersonAdd"><i class="fa fa-plus"></i>新增</a>
    </div>
    <div id="tbPersonQuery">

    </div>
</div>

<div class="modal fade modal-PersonAdd">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">新增用户</h4>
            </div>
            <div class="modal-body" id="modal-PersonAdd-Content"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info">保存</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade modal-OrgData">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">机构选择</h4>
            </div>
            <div class="modal-body" id="modal-OrgData-Content"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info">确认</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>
    function success() {
        antd.Modal.success({
            title: '编辑成功',
            content: '成功编辑1条信息！',
        });
    }

    function msgSuccess() {
        antd.message.success('你点击了搜索', 5);
    };

    function openNotificationWithIcon(type) {
        antd.notification[type]({
            message: '这是标题',
            duration: 4,
            description: '这是提示框的文案这是提示框示框的文案这是提示是提示框的文案这是提示框的文案',
        });
    };

    //新增
    $("#btPersonAdd,#btnOrgSel").click(function () {
        $($(this).attr("data-modal-for")).modal("show");
    });

    //查询
    $('#btPersonQuerySearch').on('click', function () {
        //success();
        msgSuccess();
        //openNotificationWithIcon('success');
    });


    var columns = [
      { title: '姓名', dataIndex: 'name', key: 'name', width: 100 },
      { title: '年龄', dataIndex: 'age', key: 'age', width: 100 },
      { title: '列1', dataIndex: 'address', key: '1', width: 150 },
      { title: '列2', dataIndex: 'address', key: '2', width: 150 },
      { title: '列3', dataIndex: 'address', key: '3', width: 150 },
      { title: '列4', dataIndex: 'address', key: '4', width: 150 },
      { title: '列5', dataIndex: 'address', key: '5', width: 150 },
      { title: '列6', dataIndex: 'address', key: '6', width: 150 },
      { title: '列7', dataIndex: 'address', key: '7', width: 150 },
      { title: '列8', dataIndex: 'address', key: '8', width: 150 },
      {
          title: '操作',
          key: 'operation',
          fixed: 'right',
          width: 120,
          render: function () {
              var _edit = React.createElement('a', { href: 'javascript:;' }, '编辑');
              var _delete = React.createElement('a', { href: 'javascript:;', className: 'mg_l_10' }, '删除');
              var _select = React.createElement('a', { href: 'javascript:;', className: 'mg_l_10' }, '查看');
              return React.createElement('div', null, _edit, _delete, _select);;
          }
      }
    ];

    var data = [];
    for (var i = 0; i < 100; i++) {
        data.push({
            key: i,
            name: '李大嘴' + i,
            age: Math.floor(Math.random() * 100),
            address: '西湖区湖底公园' + i + '号',
        });
    }
    //data = [];



    // 通过 rowSelection 对象表明需要行选择
    var rowSelection = {
        onChange: function (selectedRowKeys, selectedRows) {
            console.log('selectedRowKeys: ${selectedRowKeys}', 'selectedRows: ', selectedRows);
        },
        onSelect: function (record, selected, selectedRows) {
            console.log(record, selected, selectedRows);
        },
        onSelectAll: function (selected, selectedRows, changeRows) {
            console.log(selected, selectedRows, changeRows);
        },
    };

    // 范围日期选择框
    //function fncreateRangePicker() {

    //    var RangePicker = antd.DatePicker.RangePicker;
    //    var _rangePicker = React.createElement(RangePicker, {
    //        style: { width: 184 },
    //        onChange: function (value, dateString) {
    //            //console.log('From: ', value[0], ', to: ', value[1]);
    //            //console.log('From: ', dateString[0], ', to: ', dateString[1]);
    //        },
    //    });

    //    ReactDOM.render(_rangePicker, document.getElementById('dateRangePiker'));
    //}

    function fnSearchBox() {
        //初始化 antd组件
        //var antdInput = antd.Input,
        //    antdForm = antd.Form,
        //    antdFormItem = antdForm.Item,
        //    antdRow = antd.Row,
        //    antdCol = antd.Col,
        //    antdOption = antd.Select.Option,
        //    antdRadio = antd.Radio,
        //    antdRadioButton = antdRadio.Button,
        //    antdRadioGroup = antdRadio.Group;

    }

    function fncreateChildrenOrg() {
        var antdRadio = antd.Radio,
            antdRadioButton = antdRadio.Button,
            antdRadioGroup = antdRadio.Group;

        var _RadioButtonY = React.createElement(antdRadioButton, {
            value: "Y"
        }, "是"),
        _RadioButtonN = React.createElement(antdRadioButton, {
            value: "N"
        }, "否"),
            _RadioGroup = React.createElement(antdRadioGroup, {
                defaultValue: "Y"
            }, _RadioButtonY, _RadioButtonN
        );

        ReactDOM.render(_RadioGroup, document.getElementById('ChildrenOrg'));
    }


    //人员tabel数据
    function fncreateDataTable() {
        var antdTable = antd.Table,
            _table = React.createElement(antdTable, {
                rowSelection: rowSelection,
                columns: columns,
                dataSource: data,
                scroll: { x: 1 }
            });
        //_Input = React.createElement(antdInput, null);
        var _div = React.createElement('div', null, _table);
        ReactDOM.render(_div, document.getElementById('tbPersonQuery'));
    }

    function InitPersonQueryPage() {
        fncreateChildrenOrg();//是否包含子集单位信息
        fncreateDataTable();//人员tabel数据
    }

    InitPersonQueryPage();//初始化



</script>

