@{
    ViewBag.Title = "单位档案室";
    Layout = null;
}

@*<div class="seekask-title">
    <h4>单位档案室</h4>
</div>*@

@Scripts.Render(Url.Content("~/Scripts/bootstrap-treeview.js"))
@Styles.Render(Url.Content("~/Content/bootstrap-treeview.min.css"))
<style type="text/css">
    #orgList_Menu {
        position:absolute;
        width:10rem;
        z-index:20;
    }
    #orgList_Menu>li{cursor:pointer;}
</style>

<div id="orgList" class="col-sm-4"></div>

<div class="modal fade madal-addorg">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">机构维护</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-lg-12">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">机构全称</button>
                            </span>
                            <input type="text" class="form-control" data-title="机构全称" id="txtOrgName" placeholder="请输入机构全称">
                        </div><!-- /input-group -->
                    </div><!-- /.col-lg-6 -->
                </div>
                <br/>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">机构简称</button>
                            </span>
                            <input type="text" class="form-control" data-title="机构简称" id="txtShortName" placeholder="请输入机构简称">
                        </div><!-- /input-group -->
                    </div><!-- /.col-lg-6 -->
                </div>
                
                @*<div class="row">
                    <div class="col-lg-12">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">排序号码</button>
                            </span>
                            <input type="text" class="form-control" id="txtSortCode" placeholder="请输入排序号码(整数)">
                        </div>
                    </div>
                </div>*@
                
            </div>
            <div class="modal-footer">
                <p class="errmsg pull-left text-danger"></p>
                <button type="button" class="btn btn-primary" id="btnOrgSave">保存</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    var TreeNodes,
        oprateType,
        _ParentCode;

    //获取数据
    function getTree(Pcode) {
        var _option = {
            url: "@Url.Content("~/BaseManager/getOrgDataList")?ParentCode=" + (Pcode || "")
        },
        tree = [];
        $.web.get(_option, {
            OnSuccess: function (xhrData) {
                if (xhrData) {
                    $.each(xhrData, function(_i,_t) {
                        tree.push(
                            {
                                text: _t.OrgName,
                                state: {
                                    orgcode: _t.OrgCode,
                                    orgname:_t.OrgName,
                                    sortcode:_t.SortCode,
                                    shortname:_t.ShortName
                                },
                                nodes:_t.HasChildren?[]:null
                            }
                            );
                    });
                }
            },
            onFailure: function(err) {

            }

        });
        return tree;
    }

    //上移下移
    function SortNode(tp) {
        var option = {
            url: "@Url.Content("~/BaseManager/SortNode")?orgcode=" + _ParentCode+ "&tp=" + tp,
            cache:false
        },
        fnBack={
            OnSuccess: function (xhr) {
                debugger
                if (xhr.Key == "success")
                {
                    switch (tp)
                    {
                        case "up":
                            var node = getSelectedNode(),
                                prenode = getNode(node.nodeId - 1),
                                temp = prenode,
                                parentnode = getNode(node.parentId);
                            for (var i = 0, _l = parentnode.nodes.length; i < _l; i++)
                            {
                                    if (parentnode.nodes[i].nodeId == prenode.nodeId)
                                    {
                                        parentnode.nodes[i] = node;
                                        parentnode.nodes[i + 1] = temp;
                                        break;
                                    }
                                }
                            editNode(parentnode.nodeId, { node: parentnode });
                            //var $node = $(".node-selected", $("#orgList>ul")),
                            //    $nodeClone = $node.clone(true);
                            //$node.prev().before($nodeClone).end().remove();
                            break;
                        case "down":
                            var node = getSelectedNode(),
                                nextnode = getNode(node.nodeId + 1),
                                temp = node,
                                parentnode = getNode(node.parentId);
                            for (var i = 0, _l = parentnode.nodes.length; i < _l; i++) {
                                if (parentnode.nodes[i].nodeId == node.nodeId) {
                                    parentnode.nodes[i] = nextnode;
                                    parentnode.nodes[i + 1] = temp;
                                    break;
                                }
                            }
                            editNode(parentnode.nodeId, { node: parentnode });
                            //var $node = $(".node-selected", $("#orgList>ul")),
                            //    $nodeClone = $node.clone(true);
                            //$node.next().after($nodeClone).end().remove();
                            break;
                    }
                    var $selectedNode = $(".node-selected", $("#orgList")),
                        _X = $selectedNode.offset().left + $selectedNode.width() + 50,
                         _Y = $selectedNode.offset().top;
                    RightMouseMenu(_X, _Y);

                    antd.message.success("操作成功！");
                }
                else {
                    antd.message.error(xhr.Value);
                }
            },
            onFailure: function (err) {
                $("#orgList_Menu").remove();
                antd.message.error(err);
            }
        };
        $.web.get(option, fnBack);
    }

    //右键菜单
    function RightMouseMenu(_X, _Y) {
        var _top = $("#orgList").offset().top,
            _left = $("#orgList").offset().left;
        _X -= _left;
        _Y -= _top;
        if ($("#orgList_Menu").length > 0) { $("#orgList_Menu").remove();}

        $("#orgList").before(
            $("<ul>", { "class": "list-group", "id": "orgList_Menu" })
            .append(
            $("<li>", { "class": "list-group-item" }).text("上移").click(function () {
                debugger
                var node = getSelectedNode(),
                    nodes = node.parentId ?getNode(node.parentId).nodes:[];
                if (nodes.length == 0 || nodes[0].nodeId == node.nodeId) {
                    antd.message.warning("已经是第一个了！");
                    $(this).parent().remove();
                    return;
                }
                SortNode("up");
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("下移").click(function () {
                debugger
                var node = getSelectedNode(),
                    nodes = node.parentId ? getNode(node.parentId).nodes : [];
                if (nodes.length == 0 || nodes[nodes.length-1].nodeId == node.nodeId) {
                    antd.message.warning("已经是最后一个了！");
                    $(this).parent().remove();
                    return;
                }
                SortNode("down");
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("新增子节点").click(function() {
                oprateType = "add";
                $(".errmsg").empty();
                $(".madal-addorg").modal("show");
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("修改").click(function () {
                oprateType = "modify";
                $(".errmsg").empty();
                var _node = getSelectedNode();

                $("#txtOrgName").val(_node.state.orgname);
                $("#txtSortCode").val(_node.state.sortcode);
                $("#txtShortName").val(_node.state.shortname);

                $(".madal-addorg").modal("show");
                $(this).parent().remove();
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("删除").click(function () {
                oprateType = "delete";
                SaveData(_ParentCode);
                $(this).parent().remove();
            })
            )
            .css({ "left": _X, "top": _Y })
            );
    }

    function getNode(nId) {
        return $('#orgList').treeview('getNode', nId);
    }

    function addNode(nId,option) {
        $("#orgList").treeview("addNode", [nId,option ]);
    }

    function editNode(nId, option) {
        $("#orgList").treeview("editNode", [nId, option]);
    }

    function deleteNode(nId, option) {
        $("#orgList").treeview("deleteNode", [nId, option]);
    }

    function getSelectedNode() {
        return $("#orgList").treeview("getSelected")[0];
    }



    function SaveData(_code) {
        $.web.postWithOption({
            url:"@Url.Content("~/BaseManager/OrgOperate")",
            data:{
                "type":oprateType,
                "data": {
                    "OrgName": $("#txtOrgName").val(),
                    //"SortCode": $("#txtSortCode").val(),
                    "ShortName": $("#txtShortName").val(),
                    "ParentCode": _ParentCode,
                    "OrgCode": _code||null
                }
            }
        }, {
            OnSuccess: function (xhr)
            {
                console.log("执行成功");
                if (xhr)
                {
                    switch (xhr.Key)
                    {
                        case "success":

                            switch (oprateType) {
                                case "add":
                                    $("#txtOrgName,#txtShortName").val("");
                                    $(".madal-addorg").modal("hide");
                                    var _obj = $.parseJSON(xhr.Value);

                                    addNode(getSelectedNode().nodeId,
                                        {
                                            node: {
                                                text: _obj.OrgName,
                                                state: {
                                                    orgcode: _obj.OrgCode,
                                                    orgname: _obj.OrgName,
                                                    sortcode: _obj.SortCode,
                                                    shortname: _obj.ShortName
                                                },
                                                nodes:null
                                            }
                                        });
                                    break;
                                case "modify":
                                    $("#txtOrgName,#txtShortName").val("");
                                    $(".madal-addorg").modal("hide");

                                    var _obj = $.parseJSON(xhr.Value),
                                        _node = $.extend(getSelectedNode(), {
                                            text: _obj.OrgName,
                                            state: {
                                                orgcode: _obj.OrgCode,
                                                orgname: _obj.OrgName,
                                                sortcode: _obj.SortCode,
                                                shortname: _obj.ShortName
                                            }
                                        });

                                    editNode(_node.nodeId, { node: _node });
                                    antd.message.success('修改成功！');
                                    break;
                                case "delete":
                                    deleteNode(getSelectedNode().nodeId, { node: {} });
                                    console.log("删除成功");
                                    break;

                            }
                            break;
                        case "error":
                            console.log(xhr.Value);
                            break;
                    }
                }
            },
            OnComplete: function () {
                console.log("执行完毕");
            }
        });
    }

    $(function () {

        //$(document).bind("contextmenu", function () { console.log("右键菜单");  return false; });

        $("#orgList").mousedown(function (e) {
            $("#orgList_Menu").remove();
            //switch (e.which) {
            //    case 1://左键
            //        console.log('这 是左键单击事件');
            //        RightMouseMenu(e.clientX, e.clientY);
            //        break;
            //    case 3://右键键
            //        e.preventDefault();
            //        console.log('这 是右键单击事件x:' + e.clientX + ',y:' + e.clientY);
            //        RightMouseMenu(e.clientX, e.clientY);
            //        break;
            //    default:

            //}
        })
            .treeview({ data: getTree() })
            .on("nodeSelected", function (e, d) {
                var $selectedNode = $("#orgList>ul>li[data-nodeid='" + d.nodeId + "']"),
                    _X = $selectedNode.offset().left + $selectedNode.width()+50,
                    _Y = $selectedNode.offset().top;
                _ParentCode=d.state.orgcode
                RightMouseMenu(_X, _Y);
            })
            .on("nodeExpanded", function (e, node) {
                if (!node.state.IsLoaded) {
                    var $node = getNode(node.nodeId);
                    $node.state["IsLoaded"] = !0;
                    console.log("加载数据");
                    var treeData = getTree($node.state.orgcode);
                    $.each(treeData, function (_i, _t) {
                        addNode(node.nodeId, { "node": _t });
                    });
                    $node.nodes =treeData.length==0?null:treeData;
                }
                else {
                    console.log("已经加载过数据");
                }
            });

        $("#btnOrgSave").click(function () {
            var _err = [];
            for (var i = 0, _l = $("[data-title]").length; i < _l; i++) {
                var $this = $("[data-title]").eq(i);
                if (!$this.val()) { _err.push($this.attr("data-title") + "不可为空"); }
            }
            //if ($("#txtSortCode").val()) {
            //    if (!$.isNumeric($("#txtSortCode").val())) {
            //        _err.push("排序号码应为整数");
            //    }
            //}
            //else {
            //    _err.push("排序号码不可为空");
            //}

            if (_err.length > 0) {
                $(".errmsg").text("警告："+_err.join(";"));
                return;
            }
            SaveData(oprateType == "add" ? null : getSelectedNode().state.orgcode);
        });
    });
</script>