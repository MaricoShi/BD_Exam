@{
    ViewBag.Title = "单位档案室";
    Layout = null;
}

@*<div class="seekask-title">
    <h4>单位档案室</h4>
</div>*@

@Scripts.Render(Url.Content("~/Scripts/bootstrap-treeview.js"))
@Styles.Render(Url.Content("~/Content/bootstrap-treeview.min.css"))
<style type="text/css">
    #orgList_Menu {
        position:absolute;
        width:10rem;
        z-index:20;
    }
    #orgList_Menu>li{cursor:pointer;}
</style>

<div id="orgList" class="col-sm-4"></div>

<script type="text/javascript">
    //function fnCreateOrgList() {
    //    var antdTree=antd.Tree,
    //        antdTreeNode = antdTree.TreeNode;

    //    var _treenodes = getTreeNodes(antdTreeNode),
    //        _tree = React.createElement(antdTree, {
    //         onSelect:function() {
    
    //         },
    //         loadData:function() {
    
    //         }
    //        }, _treenodes);

    //    ReactDOM.render(_tree, $("#orgList").get(0));
    //}

    //function getTreeNodes(node) {
    //    var _array = [], _children = [];
    //    for (var i = 0; i < 10; i++) {
    //        var _node = React.createElement(node, {
    //            title: "单位"+(i+1),
    //            key: "" + Math.floor(Math.random() * 10000)
    //        });
    //        _children.push(_node);
    //    }

    //    for (var i = 0; i < 10; i++) {
    //        var _node = React.createElement(node, {
    //            title: "单位" + (i + 1),
    //            key: "" + Math.floor(Math.random() * 10000)
    //        }, _children);
    //        _array.push(_node);
    //    }
    //    return _array;
    //}

    //fnCreateOrgList();

    var TreeNodes;


    function getTree(Pcode) {
        debugger
        var _option = {
            url: "@Url.Content("~/BaseManager/getOrgDataList")?ParentCode=" + (Pcode || "")
        },
        tree = [];
        $.web.get(_option, {
            OnSuccess: function (xhrData) {
                if (xhrData) {
                    $.each(xhrData, function(_i,_t) {
                        tree.push(
                            {
                                text: _t.OrgName,
                                state: {
                                    orgcode: _t.OrgCode
                                },
                                nodes:_t.HasChildren?[]:null
                            }
                            );
                    });
                }
            },
            onFailure: function(err) {
                console.log(err);
            }
            
        });
        return tree;
    }

    //右键菜单
    function RightMouseMenu(_X, _Y) {
        var _top = $("#orgList").offset().top,
            _left = $("#orgList").offset().left;
            _X -= _left;
            _Y -= _top;
        
        $("#orgList").before(
            $("<ul>", { "class": "list-group", "id": "orgList_Menu" })
            .append(
            $("<li>", { "class": "list-group-item" }).text("新增子节点").click(function() {
                console.log("你点击了新增子节点");
                antd.message.info('你点击了新增子节点');
                $(this).parent().remove();
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("修改").click(function () {
                console.log("你点击了修改");
                antd.message.info('你点击了修改');
                $(this).parent().remove();
            })
            )
            .append(
            $("<li>", { "class": "list-group-item" }).text("删除").click(function () {
                console.log("你点击了删除");
                antd.message.info('你点击了删除');
                $(this).parent().remove();
            })
            ).css({"left":_X,"top":_Y})
            );
    }

    function getNode(nId) {
        return $('#orgList').treeview('getNode', nId);
    }

    function addNode(nId,option) {
        $("#orgList").treeview("addNode", [nId,option ]);
    }


    $(function () {

        //$(document).bind("contextmenu", function () { console.log("右键菜单");  return false; });

        $("#orgList").mousedown(function (e) {
                $("#orgList_Menu").remove();
            //switch (e.which) {
            //    case 1://左键
            //        console.log('这 是左键单击事件');
            //        RightMouseMenu(e.clientX, e.clientY);
            //        break;
            //    case 3://右键键
            //        e.preventDefault();
            //        console.log('这 是右键单击事件x:' + e.clientX + ',y:' + e.clientY);
            //        RightMouseMenu(e.clientX, e.clientY);
            //        break;
            //    default:

            //}
            })
            .treeview({ data: getTree() })
            .on("nodeSelected", function (e, d) {
                var $selectedNode = $("#orgList>ul>li[data-nodeid='" + d.nodeId + "']"),
                    _X = $selectedNode.offset().left + $selectedNode.width()+50,
                    _Y = $selectedNode.offset().top;
                RightMouseMenu(_X, _Y);
            })
            .on("nodeExpanded", function (e, node) {
                if (!node.state.IsLoaded) {
                    var $node = getNode(node.nodeId);
                    $node.state["IsLoaded"] = !0;
                    console.log("加载数据");
                    var treeData = getTree($node.state.orgcode);
                    $.each(treeData, function (_i, _t) {
                        addNode(node.nodeId, { "node": _t });
                    });
                    $node.nodes =treeData.length==0?null:treeData;
                }
                else {
                    console.log("已经加载过数据");
                }
            });
    });
</script>